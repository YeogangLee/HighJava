package kr.or.ddit.basic;

import org.omg.Messaging.SyncScopeHelper;

public class T04_ThreadTest {
/**
 * 1 ~ 20까지의 합계를 구하는 데 걸린 시간 체크하기
 * 전체 합계를 구하는 작업을 단독으로 했을 때(1개의 쓰레드를 사용했을 때)와
 * 여러 쓰레드로 분할해서 작업할 때의 시간을 확인해 보자.
 */
	
	public static void main(String[] args) {
		//단독으로 처리할 때...
		SumThread sm = new SumThread(1L, 2000000000L);
		
		long start = System.currentTimeMillis();
		sm.start();
		
		try {
			sm.join();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		long endTime = System.currentTimeMillis();
		
		System.out.println("단독으로 처리할 때의 처리 시간 : " + (endTime - startTime));
		
	}
}

class SumThread extends Thread {
	private long max, min;
	public SumThread(long min, long max) {
		this.min = min;
		this.max = max;
	}
	
	@Override
	public void run() {
		long sum = 0L;
		for(long i=min; i<=max; i++) {
			sum += i;
		}
		System.out.println(min + " ~ " + max + "까지의 합 : " + sum);
	}
}