package kr.or.ddit.basic;

import java.util.SortedSet;
import java.util.TreeSet;

public class T06_TreeSetTest {
	public static void main(String[] args) {
		//HashSet은 데이터에 순서가 없으나(등록되는 순서를 알 수 없음)
		//TreeSet은 자동 정렬 기능 포함
		TreeSet<String> ts = new TreeSet<>();
		
		//영어 대문자를 문자열로 변환하여 TreeSet에 저장하기
		for(char ch = 'Z'; ch >= 'A'; ch--) {
			String temp = String.valueOf(ch);
			ts.add(temp);
		}
		System.out.println("TreeSet 자료 : " + ts);
		
		//TreeSet에 저장된 자료 중 특정한 자료보다 작은 자료를 찾아서 SortedSet으로 변환하는 메서드가 있다.
		//=> headSet(기준값) 메서드 (기본적으로 '기준값'은 포함시키지 않음)
		//=> headSet(기준값, 논리값) (논리값이 true이면 '기준값'을 포함)
		SortedSet<String> ss1 = ts.headSet("K");
		System.out.println("K 이전 자료 : " + ss1); //기준값 미포함
		System.out.println("K 이전 자료(기준값 포함) : " + ts.headSet("K", true));
		
		//'기준값'보다 큰 자료를 찾아 SortedSet으로 반환하는 메서드
		//tailSet(기준값) => 기본적으로 '기준값'을 포함
		//tailSet(기준값, 논리값) => 논리값이 false이면 '기준값' 포함X
		
		SortedSet<String> ss2 = ts.tailSet("K");
		System.out.println("K 이후 자료 : " + ss2);
		System.out.println("K 이후 자료(기준값 미포함) : " + ts.tailSet("K", false));
		
		
	}
}
